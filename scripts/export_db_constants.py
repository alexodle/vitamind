import os
import psycopg2
import sys
import errno


conn_str = os.environ['POSTGRES_CONNECTION_STR']


def mkdir_p(path):
  try:
    os.makedirs(path)
  except OSError as exc:
    if exc.errno == errno.EEXIST and os.path.isdir(path):
      pass
    else:
      raise


def find_seattle(cities):
  for cid, name in cities:
    if name.startswith('Seattle'):
      return (cid, name)
  raise Exception('Seattle not found!')


def write_dark_cities_consts(gend):
  with psycopg2.connect(conn_str) as conn:
    with conn.cursor() as cur:
      cur.execute('SELECT id, name FROM city WHERE selectable = TRUE ORDER BY name;')
      cities = list(cur.fetchall())

  default_cid, _ = find_seattle(cities)

  mkdir_p(os.path.join(gend, 'ts'))
  with open(os.path.join(gend, 'ts', 'db_constants.ts'), 'w+') as f:
    f.write('// Auto-generated by export_db_constants.py\n\n')
    f.write('export const HARDCODED_DARK_CITIES: [string, number][] = [\n')
    for cid, name in cities:
      f.write('  [%r, %r],\n' % (name, cid))
    f.write(']\n\n')
    f.write('export const DEFAULT_CITY = %d\n' % default_cid)

  mkdir_p(os.path.join(gend, 'py'))
  with open(os.path.join(gend, 'py', 'db_constants.py'), 'w+') as f:
    f.write('#!/bin/python\n\n')
    f.write('# Auto-generated by export_db_constants.py\n\n')
    f.write('HARDCODED_DARK_CITIES = (\n')
    for cid, name in cities:
      f.write('  (%r, %r),\n' % (name, cid))
    f.write(')\n\n')
    f.write('DEFAULT_CITY = %d\n' % default_cid)


if __name__ == '__main__':
  gend = sys.argv[1]
  write_dark_cities_consts(gend)
